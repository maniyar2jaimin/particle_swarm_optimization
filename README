Source: http://www.swarmintelligence.org/tutorials.php
(http://www.cs.tufts.edu/comp/150GA/homeworks/hw3/_reading6%201995%20particle%20swarming.pdf)

PSO simulates the behaviors of bird flocking. Suppose the following scenario: a
group of birds are randomly searching food in an area. There is only one piece
of food in the area being searched. All the birds do not know where the food
is. But they know how far the food is in each iteration. So what's the best
strategy to find the food? The effective one is to follow the bird which is
nearest to the food.

PSO learned from the scenario and used it to solve the optimization problems.
In PSO, each single solution is a "bird" in the search space. We call it
"particle". All of particles have fitness values which are evaluated by the
fitness function to be optimized, and have velocities which direct the flying
of the particles. The particles fly through the problem space by following the
current optimum particles.

PSO is initialized with a group of random particles (solutions) and then
searches for optima by updating generations. In every iteration, each particle
is updated by following two "best" values.  The first one is the best solution
(fitness) it has achieved so far. (The fitness value is also stored.) This
value is called pbest. Another "best" value that is tracked by the particle
swarm optimizer is the best value, obtained so far by any particle in the
population. This best value is a global best and called gbest. When a particle
takes part of the population as its topological neighbors, the best value is a
local best and is called lbest.

After finding the two best values, the particle updates its velocity and
positions with following equation (a) and (b).

v[] = v[] + c1 * rand() * (pbest[] - present[]) + \    -  (a)
          c2 * rand() * (gbest[] - present[])

present[] = persent[] + v[]                            -  (b)

v[] is the particle velocity, persent[] is the current particle (solution).
pbest[] and gbest[] are defined as stated before. rand () is a random number
between (0,1). c1, c2 are learning factors, usually c1 = c2 = 2.

The pseudo code of the procedure is as follows

. For each particle
    . Initialize particle
. END

. Do
    . For each particle
        . Calculate fitness value
        . If the fitness value is better than the best fitness value (pBest) in
          history set current value as the new pBest
    . End

    . Choose the particle with the best fitness value of all the particles as
      the gBest
    . For each particle
        . Calculate particle velocity according equation (a)
        . Update particle position according equation (b)
    . End
. While maximum iterations or minimum error criteria is not attained

Particles' velocities on each dimension are clamped to a maximum velocity Vmax.
If the sum of accelerations would cause the velocity on that dimension to
exceed Vmax, which is a parameter specified by the user. Then the velocity on
that dimension is limited to Vmax.
